//Part A

#include <iostream>
#include <vector>
#include <iomanip>


using namespace std;

int total_combinations()
{
return 6*6;
}
void matrix_disply(){
    vector<vector<int>>combinations(6,vector<int>(6,0));
    for(int i=1;i<=6;i++){
        for(int j=1;j<=6;j++){
            combinations[i-1][j-1]=i+j;
        }
    }
    for(const auto &row:combinations){
        for(int value:row){
            cout<<setw(3)<<value<<" ";
        }
       cout<<endl;
    }
    
    
}
void display_probability(){
   vector<int> sumofcount(12,0);
   for(int i=1;i<=6;i++){
       for(int j=1;j<=6;j++){
           sumofcount[i+j-1]++;
       }
   }
   for (int i = 0; i < 11; ++i) {
        double value = static_cast<double>(sumofcount[i]) / total_combinations();
        cout << "P(Sum = " << (i + 2) << ") = " << fixed << setprecision(4) << value << endl;
    }
   
}


int main()
{
    int sum=total_combinations();
    cout<<sum<<endl;
    matrix_disply();
    display_probability();

    return 0;
}
